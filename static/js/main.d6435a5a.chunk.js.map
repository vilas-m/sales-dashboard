{"version":3,"sources":["Charts/HorizontalBarChart.js","Charts/TreeMap.js","Charts/LineChart.js","Charts/PieChart.js","Containers/Main.js","App.js","reportWebVitals.js","index.js"],"names":["HorizontalBarChart","useEffect","draw","d3","select","remove","margin","data","map","i","product","sales","sort","a","b","svg","append","attr","yScale","range","domain","d","padding","call","tickSize","tickPadding","g","xScale","ticks","tickFormat","selectAll","enter","bandwidth","id","className","TreeMap","root","sum","value","size","leaves","x0","y0","x1","y1","style","text","name","LineChart","value1","value2","Math","abs","value3","value4","value5","value6","push","date","moment","add","utc","valueOf","length","nice","appendPath","color","varaible","datum","x","y","PieChart","radius","min","width","height","pie","arc","innerRadius","outerRadius","outerArc","data_ready","index","posA","centroid","posB","posC","midangle","startAngle","endAngle","PI","console","log","pos","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6435a5a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\n\r\nconst HorizontalBarChart = () => {\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    d3.select(\"#h_bar_chart\").select(\"svg\").remove();\r\n\r\n    let width = 400;\r\n    let height = 350;\r\n    let margin = { left: 70, right: 20, top: 10, bottom: 20 };\r\n    let productNames = [\r\n      \"Productivity\",\r\n      \"Convenience\",\r\n      \"Extreme\",\r\n      \"Moderation\",\r\n      \"Select\",\r\n      \"Youth\",\r\n      \"All Season\",\r\n      \"Regular\",\r\n    ];\r\n\r\n    let data = productNames.map((i) => ({\r\n      product: i,\r\n      sales: d3.randomInt(1000000, 10000000)() / 1000000,\r\n    }));\r\n\r\n    data = data.sort((a, b) =>\r\n      a.sales > b.sales ? 1 : b.sales > a.sales ? -1 : 0\r\n    );\r\n\r\n    let svg = d3\r\n      .select(\"#h_bar_chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    let yScale = d3\r\n      .scaleBand()\r\n      .range([height, 0])\r\n      .domain(\r\n        data.map((d) => {\r\n          return d.product;\r\n        })\r\n      )\r\n      .padding(0.2);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(d3.axisLeft(yScale).tickSize(0).tickPadding(7))\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    let xScale = d3\r\n      .scaleLinear()\r\n      .domain([0, d3.max(data, (d) => d.sales)])\r\n      .range([0, width]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .call(\r\n        d3\r\n          .axisBottom(xScale)\r\n          .ticks(5)\r\n          .tickSize(0)\r\n          .tickPadding(7)\r\n          .tickFormat((d) => d + \" M\")\r\n      )\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    svg\r\n      .selectAll(\"bars\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"y\", (d) => yScale(d.product))\r\n      .attr(\"x\", 0)\r\n      .attr(\"height\", yScale.bandwidth())\r\n      .attr(\"width\", (d) => xScale(d.sales))\r\n      .attr(\"fill\", \"#428a80\");\r\n  };\r\n\r\n  return <div id={\"h_bar_chart\"} className=\"chart\"></div>;\r\n};\r\n\r\nexport default HorizontalBarChart;\r\n","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst TreeMap = () => {\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    let margin = { top: 10, right: 10, bottom: 10, left: 10 };\r\n    let width = 640;\r\n    let height = 270;\r\n\r\n    let svg = d3\r\n      .select(\"#treemap\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    let data = {\"children\":[{\"name\":\"boss1\",\"children\":[{\"name\":\"mister_a\",\"group\":\"A\",\"value\":28,\"colname\":\"level3\"},{\"name\":\"mister_b\",\"group\":\"A\",\"value\":19,\"colname\":\"level3\"},{\"name\":\"mister_c\",\"group\":\"C\",\"value\":18,\"colname\":\"level3\"},{\"name\":\"mister_d\",\"group\":\"C\",\"value\":19,\"colname\":\"level3\"}],\"colname\":\"level2\"},{\"name\":\"boss2\",\"children\":[{\"name\":\"mister_e\",\"group\":\"C\",\"value\":14,\"colname\":\"level3\"},{\"name\":\"mister_f\",\"group\":\"A\",\"value\":11,\"colname\":\"level3\"},{\"name\":\"mister_g\",\"group\":\"B\",\"value\":15,\"colname\":\"level3\"},{\"name\":\"mister_h\",\"group\":\"B\",\"value\":16,\"colname\":\"level3\"}],\"colname\":\"level2\"},{\"name\":\"boss3\",\"children\":[{\"name\":\"mister_i\",\"group\":\"B\",\"value\":10,\"colname\":\"level3\"},{\"name\":\"mister_j\",\"group\":\"A\",\"value\":13,\"colname\":\"level3\"},{\"name\":\"mister_k\",\"group\":\"A\",\"value\":13,\"colname\":\"level3\"},{\"name\":\"mister_l\",\"group\":\"D\",\"value\":25,\"colname\":\"level3\"},{\"name\":\"mister_m\",\"group\":\"D\",\"value\":16,\"colname\":\"level3\"},{\"name\":\"mister_n\",\"group\":\"D\",\"value\":28,\"colname\":\"level3\"}],\"colname\":\"level2\"}],\"name\":\"CEO\"}\r\n   \r\n    var root = d3.hierarchy(data).sum(function(d){ return d.value}) // Here the size of each leave is given in the 'value' field in input data\r\n\r\n  // Then d3.treemap computes the position of each element of the hierarchy\r\n  d3.treemap()\r\n    .size([width, height])\r\n    .padding(2)\r\n    (root)\r\n\r\n  // use this information to add rectangles:\r\n  svg\r\n    .selectAll(\"rect\")\r\n    .data(root.leaves())\r\n    .enter()\r\n    .append(\"rect\")\r\n      .attr('x', function (d) { return d.x0; })\r\n      .attr('y', function (d) { return d.y0; })\r\n      .attr('width', function (d) { return d.x1 - d.x0; })\r\n      .attr('height', function (d) { return d.y1 - d.y0; })\r\n      .style(\"stroke\", \"black\")\r\n      .style(\"fill\", \"slateblue\")\r\n\r\n  // and to add the text labels\r\n  svg\r\n    .selectAll(\"text\")\r\n    .data(root.leaves())\r\n    .enter()\r\n    .append(\"text\")\r\n      .attr(\"x\", function(d){ return d.x0+5})    // +10 to adjust position (more right)\r\n      .attr(\"y\", function(d){ return d.y0+20})    // +20 to adjust position (lower)\r\n      .text(function(d){ return d.data.name })\r\n      .attr(\"font-size\", \"15px\")\r\n      .attr(\"fill\", \"white\")\r\n  };\r\n\r\n  return <div id=\"treemap\"></div>;\r\n};\r\n\r\nexport default TreeMap;\r\n","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\nimport moment from \"moment\";\r\n\r\nconst LineChart = () => {\r\n  let data = [];\r\n\r\n  useEffect(() => {\r\n    draw();\r\n  });\r\n\r\n  let draw = () => {\r\n    d3.select(\"#lineChart\").select(\"svg\").remove();\r\n\r\n    let width = 640;\r\n    let height = 270;\r\n    let margin = { left: 40, right: 20, top: 10, bottom: 20 };\r\n\r\n    for (let i = 0; i < 30; i++) {\r\n      let high = d3.randomInt(0, 21 + i)();\r\n      let value1 = high;\r\n\r\n      let value2 = Math.abs(d3.randomInt(value1 - 8, value1)());\r\n      let value3 = Math.abs(d3.randomInt(value2 - 8, value2)());\r\n      let value4 = Math.abs(d3.randomInt(value3 - 8, value3)());\r\n      let value5 = Math.abs(d3.randomInt(value4 - 8, value4)());\r\n      let value6 = Math.abs(d3.randomInt(value5 - 8, value5)());\r\n      data.push({\r\n        date: moment()\r\n          .add(-200 + i, \"days\")\r\n          .utc(),\r\n        value1,\r\n        value2,\r\n        value3,\r\n        value4,\r\n        value5,\r\n        value6,\r\n      });\r\n    }\r\n\r\n    let svg = d3\r\n      .select(\"#lineChart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\r\n        \"viewBox\",\r\n        `0 0 ${width + margin.left + margin.right} ${\r\n          height + margin.top + margin.bottom\r\n        }`\r\n      )\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n    let xScale = d3\r\n      .scaleTime()\r\n      .domain([\r\n        data[0][\"date\"].valueOf(),\r\n        data[data.length - 1][\"date\"].valueOf(),\r\n      ])\r\n      .range([0, width])\r\n      .nice();\r\n\r\n    let yScale = d3.scaleLinear().domain([0, 50]).range([height, 0]);\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .style(\"opacity\", 0.5)\r\n      .call(d3.axisLeft(yScale).ticks(5).tickSize(0).tickPadding(20))\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    svg\r\n      .append(\"g\")\r\n      .style(\"opacity\", 0.5)\r\n      .call(d3.axisBottom(xScale).ticks(4).tickSize(0).tickPadding(10))\r\n      .attr(\"transform\", `translate(0, ${height})`)\r\n      .call((g) => g.select(\".domain\").remove());\r\n\r\n    let appendPath = (color, varaible) => {\r\n      svg\r\n        .append(\"path\")\r\n        .datum(data)\r\n        .attr(\"fill\", \"none\")\r\n        .attr(\"stroke\", color)\r\n        .attr(\"stroke-width\", 1.5)\r\n        .attr(\r\n          \"d\",\r\n          d3\r\n            .line()\r\n            .x((d) => {\r\n              return xScale(d.date);\r\n            })\r\n            .y((d) => {\r\n              return yScale(d[varaible]);\r\n            })\r\n        );\r\n    };\r\n\r\n    appendPath(\"#e38960\", \"value1\");\r\n    appendPath(\"#090d0f\", \"value2\");\r\n    appendPath(\"#d36463\", \"value3\");\r\n    appendPath(\"#397690\", \"value4\");\r\n    appendPath(\"#d9b51d\", \"value5\");\r\n    appendPath(\"#63bcb4\", \"value6\");\r\n  };\r\n\r\n  return <div className={\"chart\"} id={\"lineChart\"}></div>;\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./chartStyles.scss\";\r\n\r\nexport default function PieChart() {\r\n  useEffect(() => {\r\n    draw();\r\n  }, []);\r\n\r\n  let draw = () => {\r\n    d3.select(\"#pie_chart\").select(\"svg\").remove();\r\n\r\n    let margin = 10;\r\n    let width = 410;\r\n    let height = 310;\r\n    let data = [\r\n      {\r\n        name: \"Natura\",\r\n        value: 30,\r\n      },\r\n      {\r\n        name: \"Alqua\",\r\n        value: 20,\r\n      },\r\n      {\r\n        name: \"lama\",\r\n        value: 18,\r\n      },\r\n      {\r\n        name: \"Palma\",\r\n        value: 16,\r\n      },\r\n      {\r\n        name: \"Curra\",\r\n        value: 13,\r\n      },\r\n      {\r\n        name: \"Qubus\",\r\n        value: 8,\r\n      },\r\n      {\r\n        name: \"Luo\",\r\n        value: 13,\r\n      },\r\n    ];\r\n\r\n    let radius = Math.min(width, height) / 3 - margin;\r\n\r\n    let svg = d3\r\n      .select(\"#pie_chart\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", \"100%\")\r\n      .attr(\"height\", \"100%\")\r\n      .attr(\"viewBox\", `0 0 ${width + 2 * margin} ${height + 2 * margin}`)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\r\n\r\n    let pie = d3.pie().value((d) => {\r\n      return d.value;\r\n    });\r\n\r\n    let arc = d3\r\n      .arc()\r\n      .innerRadius(radius * 0.5) // This is the size of the donut hole\r\n      .outerRadius(radius * 0.8);\r\n\r\n    let outerArc = d3\r\n      .arc()\r\n      .innerRadius(radius * 0.9)\r\n      .outerRadius(radius * 0.9);\r\n\r\n    let data_ready = pie(data);\r\n\r\n    svg\r\n      .selectAll(\"slices\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"path\")\r\n      .attr(\"d\", d3.arc().innerRadius(0).outerRadius(radius))\r\n      .attr(\"fill\", (d) => {\r\n        return d3.schemeDark2[d.index];\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"allPolylines\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"polyline\")\r\n      .attr(\"stroke\", \"black\")\r\n      .style(\"fill\", \"none\")\r\n      .attr(\"stroke-width\", 1)\r\n      .attr(\"points\", function (d) {\r\n        let posA = arc.centroid(d); // line insertion in the slice\r\n        let posB = outerArc.centroid(d); // line break: we use the other arc generator that has been built only for that\r\n        let posC = outerArc.centroid(d); // Label position = almost the same as posB\r\n        let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2; // we need the angle to see if the X position will be at the extreme right or extreme left\r\n        posC[0] = radius * 0.95 * (midangle < Math.PI ? 1 : -1); // multiply by 1 or -1 to put it on the right or on the left\r\n        return [posA, posB, posC];\r\n      });\r\n\r\n    // Add the polylines between chart and labels:\r\n    svg\r\n      .selectAll(\"allLabels\")\r\n      .data(data_ready)\r\n      .enter()\r\n      .append(\"text\")\r\n      .text(function (d) {\r\n        console.log(d.data.name);\r\n        return d.data.name;\r\n      })\r\n      .attr('class', 'pie-text')\r\n      .attr(\"transform\", function (d) {\r\n        let pos = outerArc.centroid(d);\r\n        let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.99 * (midangle < Math.PI ? 1 : -1);\r\n        return \"translate(\" + pos + \")\";\r\n      })\r\n      .style(\"text-anchor\", function (d) {\r\n        let midangle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        return midangle < Math.PI ? \"start\" : \"end\";\r\n      })\r\n  };\r\n\r\n  return <div className=\"pieChart\" id=\"pie_chart\"></div>;\r\n}\r\n","import React from \"react\";\r\nimport HorizontalBarChart from \"../Charts/HorizontalBarChart\";\r\n// import BarChart from \"../Charts/BarChart\";\r\nimport \"./styles.scss\";\r\nimport TreeMap from \"../Charts/TreeMap\";\r\nimport LineChart from \"../Charts/LineChart\";\r\nimport PieChart from \"../Charts/PieChart\";\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"top\">\r\n        <div className=\"t-1\">\r\n          <HorizontalBarChart />\r\n        </div>\r\n        <div className=\"t-2\">\r\n          {/* <BarChart /> */}\r\n        </div>\r\n        <div className=\"t-3\">\r\n          <PieChart />\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <div className=\"b-half\">\r\n          <TreeMap />\r\n        </div>\r\n        <div className=\"b-half\">\r\n          <LineChart />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Main from \"./Containers/Main\";\nfunction App() {\n  return (\n    <div\n    style={{width: '100%', height:'100vh'}}\n    >\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}